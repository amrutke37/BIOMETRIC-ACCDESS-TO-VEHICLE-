/*************************************************** 
Vehicle Theft using FingerPrint
  Checks for fuel theft at the start and
  then ON the Vehicle if password matched
 ****************************************************/

#include <LiquidCrystal.h>
#include <Adafruit_Fingerprint.h>
#include <SoftwareSerial.h>

LiquidCrystal lcd(2,3,4,5,6,7);
int count=0;
int collect=0;
boolean fingerfound=false;
int r1=8;
int alch=9;
int acci=12;
int buzz = 13;

int getFingerprintIDez();

// pin #2 is IN from sensor (GREEN wire)
// pin #3 is OUT from arduino  (WHITE wire)

SoftwareSerial mySerial(10,11);
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);



void setup()  
{
  while (!Serial);  // For Yun/Leo/Micro/Zero/...
  
  pinMode(r1,OUTPUT);

      
  pinMode(buzz,OUTPUT);
 

  mySerial.begin(9600);
  Serial.begin(9600);
  lcd.begin(16, 2);

  startUp();
  digitalWrite(r1,LOW);
 
  digitalWrite(buzz,LOW);
  
  finger.begin(57600);

  
  top:
  if (finger.verifyPassword()) {
    Serial.println("Found fingerprint sensor!");
  } else {
    Serial.println("Did not find fingerprint sensor :(");
    while (1);
  }
  Serial.println("Waiting for valid finger...");
  
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Insert finger");
  delay(2000);
  
  collect=getFingerprintID();
  delay(50);            //don't ned to run this at full speed.

  
  if(collect==7)
  {
    goto top;
  }
  
  if(fingerfound)
  {
    digitalWrite(r1,HIGH);
    fingerfound=false;
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Valid Finger");
      lcd.setCursor(0,1);
      lcd.print("Vehicle Start");
      digitalWrite(buzz,HIGH);delay(1000);
      digitalWrite(buzz,LOW);delay(1000);
       send_SMS("AUTHORISED PERSON ACCESED YOUR VEHICLE ");
       validateBoth();
  }
  else{
    count++;
    if(count>1)
    {      
      send_SMS(" VEHICLE TRIED TO THEFT ; UNAUTHORISED ACCESS");
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Theft Alert");
      lcd.setCursor(0,1);
      lcd.print("Msg Sent..!!");

      digitalWrite(buzz,HIGH);delay(1000);delay(1000);
      digitalWrite(buzz,LOW);delay(1000);
      digitalWrite(buzz,HIGH);delay(1000);delay(1000);
      digitalWrite(buzz,LOW);delay(1000);
      count=0;
    }
    else{
      goto top;
    }
  }
}

void loop()                     // run over and over again


{

// ALCOHOL DETECTION


 if(digitalRead(alch) == LOW)
  
  {
  send_SMS("PERSON DETECTED WITH ALCOHOL ON VEHICLE ");
     digitalWrite(r1,LOW);
  digitalWrite(buzz,HIGH);
  lcd.begin(16, 2);
  lcd.setCursor(0,0);
  lcd.print("ALCOHOL DETECT");
  delay(3000);
  digitalWrite(buzz,LOW);
   startUp();
  }
 
 // ACCIDENT DETECTION
 
 else if(digitalRead(acci) == HIGH)
  
  {
  send_SMS("PERSON MET WITH ACCIDENT ON VEHICLE ");
   digitalWrite(r1,LOW);
  digitalWrite(buzz,HIGH);
  lcd.begin(16, 2);
  lcd.setCursor(0,0);
  lcd.print("ACCIDENT OCCUR");
  delay(3000);
  digitalWrite(buzz,LOW);
   startUp();
  }
  
  else
  {
    digitalWrite(buzz,LOW);
    
  }
 
}


// Finger Print Verification Function

uint8_t getFingerprintID()
{
  uint8_t p = finger.getImage();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Image taken");
      break;
    case FINGERPRINT_NOFINGER:
      Serial.println("No finger detected");
      lcd.clear();lcd.setCursor(0,0);
      lcd.print("No finger");lcd.setCursor(0,1);
      lcd.print("Detected..!!");delay(2000);
      return 7;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return p;
    case FINGERPRINT_IMAGEFAIL:
      Serial.println("Imaging error");
      return p;
    default:
      Serial.println("Unknown error");
      return p;
  }

  // OK success!

  p = finger.image2Tz();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Image converted");
      break;
    case FINGERPRINT_IMAGEMESS:
      Serial.println("Image too messy");
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return p;
    case FINGERPRINT_FEATUREFAIL:
      Serial.println("Could not find fingerprint features");
      return p;
    case FINGERPRINT_INVALIDIMAGE:
      Serial.println("Could not find fingerprint features");
      return p;
    default:
      Serial.println("Unknown error");
      return p;
  }
  
  // OK converted!
  p = finger.fingerFastSearch();
  if (p == FINGERPRINT_OK) {
    Serial.println("Found a print match!");
  } else if (p == FINGERPRINT_PACKETRECIEVEERR) {
    Serial.println("Communication error");
    return p;
  } else if (p == FINGERPRINT_NOTFOUND) {
    Serial.println("Did not find a match");
    lcd.clear();lcd.setCursor(0,0);
      lcd.print("Did not find");lcd.setCursor(0,1);
      lcd.print("a match..!!");delay(2000);
    return p;
  } else {
    Serial.println("Unknown error");
    return p;
  }   
  
  // found a match!
  Serial.print("Found ID #"); Serial.print(finger.fingerID); 
  Serial.print(" with confidence of "); Serial.println(finger.confidence); 
  
  fingerfound=true;
}

// returns -1 if failed, otherwise returns ID #
int getFingerprintIDez() {
  uint8_t p = finger.getImage();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.image2Tz();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.fingerFastSearch();
  if (p != FINGERPRINT_OK)  return -1;
  
  // found a match!
  Serial.print("Found ID #"); Serial.print(finger.fingerID); 
  Serial.print(" with confidence of "); Serial.println(finger.confidence);
  
  fingerfound=true;
   validateBoth();
  
  return finger.fingerID; 
}


int validateBoth()
{
  //static int q=0;
  //int w=0;
  if(finger.fingerID==1 || finger.fingerID==2 || finger.fingerID==3|| finger.fingerID==4|| finger.fingerID==5)
  {
    if(finger.fingerID==1)
    {
      digitalWrite(buzz,HIGH);
      delay(1500);
      digitalWrite(buzz,LOW);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("AISHWARYA.D");
  
      delay(2000);
      lcd.setCursor(0,1);
      lcd.print("RC Book: OK");
      delay(2000);
      lcd.setCursor(0,1);
      lcd.print("Insurance: NC");
      delay(2000);
      lcd.setCursor(0,1);
      lcd.print("Emission: OK ");
      delay(5000);
      startUp();
    }


    
    if(finger.fingerID==2)
    {
     digitalWrite(buzz,HIGH);
      delay(1500);
      digitalWrite(buzz,LOW);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("POOJA. R");
   
      delay(2000);
      lcd.setCursor(0,1);
      lcd.print("RC Book: OK");
      delay(2000);
      lcd.setCursor(0,1);
       lcd.print("Insurance: OK");
       delay(2000);
      lcd.setCursor(0,1);
      lcd.print("Emission: NC ");
       delay(5000);
      startUp();
    }
    if(finger.fingerID==3)
    {
      digitalWrite(buzz,HIGH);
      delay(1500);
      digitalWrite(buzz,LOW);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("AMRUT. K");
      delay(2000);
      lcd.setCursor(0,1);
       lcd.print("RC Book: OK");
      delay(1000);
      lcd.setCursor(0,1);
      lcd.print("Insurance: NC");
       delay(1000);
      lcd.setCursor(0,1);
       lcd.print("Emission: NC ");
       delay(5000);
      startUp();
    }
    if(finger.fingerID==4){
    digitalWrite(buzz,HIGH);
      delay(1500);
      digitalWrite(buzz,LOW);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("BHARAT. R");
     
      delay(2000);
      lcd.setCursor(0,1);
      lcd.print("RC Book: OK");
      delay(1000);
      lcd.setCursor(0,1);
       lcd.print("Insurance: NC");
       delay(1000);
      lcd.setCursor(0,1);
        lcd.print("Emission: NC ");
       delay(5000);
      startUp();
    }


 if(finger.fingerID==5){
    digitalWrite(buzz,HIGH);
      delay(1500);
      digitalWrite(buzz,LOW);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("NIRANJAN. U");
     
      delay(2000);
      lcd.setCursor(0,1);
      lcd.print("RC Book: NC");
      delay(1000);
      lcd.setCursor(0,1);
       lcd.print("Insurance: OK");
       delay(1000);
      lcd.setCursor(0,1);
        lcd.print("Emission: NC ");
       delay(5000);
      startUp();
    }
    
    }
    else 
      {
       lcd.clear();
       lcd.setCursor(0,0);
       lcd.print(" Invalid Rider ");
       lcd.setCursor(0,1);
       lcd.print("    Retry   ");
       delay(2000); 
       return 0; 
      }
}


void send_SMS(char *msg)

{

Serial.println("AT");
delay(1000);
Serial.println("AT+CMGF=1");
delay(500);
Serial.println("AT+CMGS=\"8050866928\"\r");
delay(1000);
Serial.println(msg);
delay(500);
Serial.println(0x1A);
Serial.println(char(26));
delay(1000);

}


void startUp()
{
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(" FPU VEHICLE ");
  lcd.setCursor(0,1);
  lcd.print("  AUTOMATION ");
  delay(2000);
 
  //check = 1;
}
